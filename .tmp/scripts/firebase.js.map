{"version":3,"sources":["firebase.js"],"names":["firebaseConfig","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","firebase","initializeApp","commentsAppReference","database","$","$commentElement","submit","event","preventDefault","name","val","email","commentType","comment","commentsReference","ref","push","votes","getComments","on","results","empty","allComments","com","$listElement","$toolbox","$delete","e","id","target","parentNode","remove","catch","error","console","log","message","$upVote","updatedUpvotes","update","$downVote","updatedDownVotes","append"],"mappings":"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","sourcesContent":["// Your web app's Firebase configuration\nvar firebaseConfig = {\n  apiKey: \"AIzaSyBeqfuFcWyHdcQYZWP-DEAfcL2yIcZkGwI\",\n  authDomain: \"hussam-de.firebaseapp.com\",\n  databaseURL: \"https://hussam-de.firebaseio.com\",\n  projectId: \"hussam-de\",\n  storageBucket: \"hussam-de.appspot.com\",\n  messagingSenderId: \"236653110251\",\n  appId: \"1:236653110251:web:5d399827767f94aa\"\n};\n\n// Initialize Firebase\nfirebase.initializeApp(firebaseConfig);\n\nvar commentsAppReference = firebase.database();\n\n$(() => {\n  var $commentElement = $(\"#comments\");\n\n  $(\"#comment_form\").submit(function(event) {\n    // by default a form submit reloads the DOM which will subsequently reload all our JS\n    // to avoid this we preventDefault()\n    event.preventDefault();\n\n    // grab user message input\n    let name = $(\"#name\").val();\n    let email = $(\"#email\").val();\n    let commentType = $(\"input[type='radio']:checked\").val();\n    let comment = $(\"#comment\").val();\n\n    // clear message input (for UX purposes)\n    $(\"#name\").val(\"\");\n    $(\"#email\").val(\"\");\n    $(\"#comment\").val(\"\");\n\n    // create a section for messages data in your db\n    let commentsReference = commentsAppReference.ref(\"Comments\");\n\n    // use the set method to save data to the messages\n    commentsReference.push({\n      name: name,\n      email: email,\n      commentType: commentType,\n      comment: comment,\n      votes: 0\n    });\n  });\n\n  function getComments() {\n    // retrieve messages data when .on() initially executes\n    // and when its data updates\n    commentsAppReference.ref(\"Comments\").on(\"value\", function(results) {\n      // remove lis to avoid dupes\n      $commentElement.empty(); // TODO : Solve the problem in here only the last comment work.\n\n      let allComments = results.val();\n\n      // iterate through results coming from database call; messages\n      for (let com in allComments) {\n        // create message element\n        let $listElement = $(\"<div class= 'col-lg-3  com' />\");\n        let $toolbox = $(`<div class='col toolbox' id=${com}/>`);\n\n        // create delete element\n        var $delete = $('<i class=\"fa fa-trash pull-right\"></i>');\n        $delete.on(\"click\", function(e) {\n          let id = e.target.parentNode.id;\n\n          commentsAppReference\n            .ref(`Comments/${id}`)\n            .remove()\n            .catch(error => {\n              console.log(\"Remove failed: \" + error.message);\n            });\n        });\n\n        // create up vote element\n        var $upVote = $('<i class=\"fa fa-thumbs-up pull-right\"></i>');\n        $upVote.on(\"click\", function(e) {\n          let id = e.target.parentNode.id;\n          let updatedUpvotes = votes + 1;\n\n          commentsAppReference\n            .ref(`Comments/${id}/`)\n            .update({ votes: updatedUpvotes })\n            .catch(error => {\n              console.log(\"Update failed: \" + error.message);\n            });\n        });\n\n        // create down vote element\n        var $downVote = $('<i class=\"fa fa-thumbs-down pull-right\"></i>');\n        $downVote.on(\"click\", function(e) {\n          let id = e.target.parentNode.id;\n          let updatedDownVotes = votes - 1;\n\n          commentsAppReference\n            .ref(`Comments/${id}/`)\n            .update({ votes: updatedDownVotes })\n            .catch(error => {\n              console.log(\"Update failed: \" + error.message);\n            });\n        });\n        // get method is supposed to represent HTTP GET method\n        let votes = allComments[com].votes;\n\n        let commentType = allComments[com].commentType;\n        switch (commentType) {\n          case \"1\":\n            commentType = \"Issue\";\n            break;\n          case \"2\":\n            commentType = \"Suggestion\";\n            break;\n          case \"3\":\n            commentType = \"Complaint\";\n            break;\n          default:\n            commentType = \"No Type\";\n        }\n        $toolbox\n          .append($delete)\n          .append($upVote)\n          .append($downVote)\n          .append(votes);\n\n        $listElement\n          .append(`<p>${allComments[com].name} - ${allComments[com].email}</p>`)\n          .append(`<p>${commentType} </p>`)\n          .append(`<h3>${allComments[com].comment}</h4>`)\n          .append($toolbox);\n\n        $commentElement.append($listElement);\n      }\n    });\n  }\n\n  // on initialization of app (when document is ready) get fan messages\n  getComments();\n});\n"],"file":"firebase.js"}